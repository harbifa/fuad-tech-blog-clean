---
export interface Props {
  title: string;
  description: string;
  image?: string;
  type?: 'website' | 'article';
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  tags?: string[];
  canonical?: string;
}

const {
  title,
  description,
  image = '/blog-social-default.jpg',
  type = 'website',
  publishedTime,
  modifiedTime,
  author = 'فؤاد عزيز',
  tags = [],
  canonical
} = Astro.props;

const siteURL = 'https://fuad3ziz.com';
const fullTitle = title.includes('مدونة عزيز') ? title : `${title} | مدونة عزيز`;
const fullImage = image.startsWith('http') ? image : `${siteURL}${image}`;
const fullCanonical = canonical ? `${siteURL}${canonical}` : Astro.url.href;
---

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />
<meta name="author" content={author} />
<meta name="robots" content="index, follow" />
<meta name="language" content="ar" />
<meta name="revisit-after" content="7 days" />

<!-- Canonical URL -->
<link rel="canonical" href={fullCanonical} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={fullCanonical} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={fullImage} />
<meta property="og:site_name" content="مدونة عزيز" />
<meta property="og:locale" content="ar_SA" />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={fullCanonical} />
<meta property="twitter:title" content={fullTitle} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={fullImage} />
<meta property="twitter:creator" content="@fuad3ziz" />

<!-- Additional Meta Tags -->
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="theme-color" content="#8B5CF6" />
<meta name="msapplication-TileColor" content="#8B5CF6" />

<!-- Article specific meta tags -->
{type === 'article' && publishedTime && (
  <meta property="article:published_time" content={publishedTime} />
)}
{type === 'article' && modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime} />
)}
{type === 'article' && author && (
  <meta property="article:author" content={author} />
)}
{type === 'article' && tags.length > 0 && (
  <>
    {tags.map((tag) => (
      <meta property="article:tag" content={tag} />
    ))}
  </>
)}

<!-- Structured Data for Blog -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": type === 'article' ? "BlogPosting" : "WebSite",
  "name": fullTitle,
  "description": description,
  "url": fullCanonical,
  "image": fullImage,
  "author": {
    "@type": "Person",
    "name": author,
    "url": `${siteURL}/about`
  },
  "publisher": {
    "@type": "Organization",
    "name": "مدونة عزيز",
    "logo": {
      "@type": "ImageObject",
      "url": `${siteURL}/favicon.svg`
    }
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": fullCanonical
  },
  ...(type === 'article' && publishedTime && {
    "datePublished": publishedTime,
    "dateModified": modifiedTime || publishedTime,
    "headline": title
  })
})} />