---
export interface Props {
  icon?: string; // ex: "fa-star"
  color?: 'yellow' | 'blue' | 'red' | 'green' | 'purple' | 'orange' | 'slate';
  fontSize?: string; // ex: "2.25rem"
  lineHeight?: string; // ex: "2.5rem"
  gap?: string; // ex: "0.5rem"
  iconSize?: string; // ex: "2.25rem"
}

const {
  icon,
  color = 'yellow',
  fontSize = '2.25rem',
  lineHeight = '2.5rem',
  gap = '0.5rem',
  iconSize = '2.25rem',
} = Astro.props;

const colorMap = {
  yellow: {
    ring: 'border-yellow-500',
    icon: 'bg-yellow-400 dark:bg-yellow-500',
  },
  blue: {
    ring: 'border-blue-500',
    icon: 'bg-blue-400 dark:bg-blue-500',
  },
  red: {
    ring: 'border-red-500',
    icon: 'bg-red-400 dark:bg-red-500',
  },
  green: {
    ring: 'border-green-500',
    icon: 'bg-green-400 dark:bg-green-500',
  },
  purple: {
    ring: 'border-purple-500',
    icon: 'bg-purple-400 dark:bg-purple-500',
  },
  orange: {
    ring: 'border-orange-500',
    icon: 'bg-orange-400 dark:bg-orange-500',
  },
  slate: {
    ring: 'border-slate-500',
    icon: 'bg-slate-400 dark:bg-slate-500',
  },
};

const styles = colorMap[color] || colorMap.yellow;
---

<div class="mb-6">
  <h2
    class={`font-black text-gray-900 dark:text-gray-100 border-b-4 pb-3 ${styles.ring} flex items-center`}
    style={`direction: rtl; font-size: ${fontSize}; line-height: ${lineHeight}; gap: ${gap};`}
  >
    <span
      class={`inline-flex items-center justify-center rounded ${styles.icon} flex-shrink-0`}
      style={`width: ${iconSize}; height: ${iconSize};`}
    >
      {icon && <i class={`fas ${icon} text-white text-sm`}></i>}
    </span>
    <slot />
  </h2>
</div>
